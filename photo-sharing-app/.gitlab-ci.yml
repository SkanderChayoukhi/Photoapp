stages:
- test
- release
- deploy

test_photographer:
  stage: test
  variables:
    MONGO_HOST: mongo-test
  image: $CI_REGISTRY/$CI_PROJECT_PATH/photoapptest_1.0
  script:
  - cd app/photographer-service
  - pytest -p no:warnings
  services:
  - name: mongo:4.4.12
    alias: mongo-test

build_photographer:
  stage: release
  image:
    name: gcr.io/kaniko-project/executor:debug
    entrypoint: [""]
  # These variables are needed to make executor image able to download images
  variables:
    HTTP_PROXY: http://192.108.115.2:8080
    HTTPS_PROXY: http://192.108.115.2:8080
    NO_PROXY: gitlab-df.imt-atlantique.fr,gitlab-df-registry.imt-atlantique.fr
  before_script:
    - mkdir -p /kaniko/.docker
    - echo "{\"auths\":{\"${CI_REGISTRY}\":{\"auth\":\"$(printf "%s:%s" "${CI_REGISTRY_USER}" "${CI_REGISTRY_PASSWORD}" | base64 | tr -d '\n')\"}}}" > /kaniko/.docker/config.json
  script:
    - >-
      /kaniko/executor
      --context "${CI_PROJECT_DIR}/app/photographer-service"
      --dockerfile "${CI_PROJECT_DIR}/app/photographer-service/Dockerfile"
      --destination "${CI_REGISTRY_IMAGE}/photographer:${CI_COMMIT_SHORT_SHA}"
      --build-arg HTTP_PROXY=${HTTP_PROXY}
      --build-arg HTTPS_PROXY=${HTTPS_PROXY}

      # Again, HTTP(S)_PROXY needed for the docker build with kaniko    

deploy_photographer:
  stage: deploy
  image:
    name: bitnami/kubectl
    entrypoint: [""]
  script:
    - cd app/photographer-service
    - sed -i "s/:latest/:${CI_COMMIT_SHORT_SHA}/g" k8s-photographer.yml
    - kubectl apply -f k8s-photographer.yml
  environment:
    name: production

test_photo:
  stage: test
  variables:
    MONGO_HOST: mongo-test
  image: $CI_REGISTRY/$CI_PROJECT_PATH/photoapptest_1.0
  script:
    - cd app/photo-service
    - python -m grpc_tools.protoc --python_out=. --grpc_python_out=. --proto_path=proto proto/tags.proto
    - pytest -p no:warnings
  services:
    - name: gitlab-registry.imt-atlantique.fr/devops-lab/shared/mongo:latest
      alias: mongo-service-test
    - name: gitlab-registry.imt-atlantique.fr/devops-lab/shared/tags
      alias: tag-service

build_photo:
  stage: release
  image:
    name: gcr.io/kaniko-project/executor:debug
    entrypoint: [""]
  variables:
    HTTP_PROXY: http://192.108.115.2:8080
    HTTPS_PROXY: http://192.108.115.2:8080
    NO_PROXY: gitlab-df.imt-atlantique.fr,gitlab-df-registry.imt-atlantique.fr
  before_script:
    - mkdir -p /kaniko/.docker
    - echo "{\"auths\":{\"${CI_REGISTRY}\":{\"auth\":\"$(printf "%s:%s" "${CI_REGISTRY_USER}" "${CI_REGISTRY_PASSWORD}" | base64 | tr -d '\n')\"}}}" > /kaniko/.docker/config.json
  script:
    - export HTTP_PROXY=${HTTP_PROXY}
    - export HTTPS_PROXY=${HTTPS_PROXY}
    - export NO_PROXY=${NO_PROXY}
    - >-
      /kaniko/executor
      --context "${CI_PROJECT_DIR}/app/photo-service"
      --dockerfile "${CI_PROJECT_DIR}/app/photo-service/Dockerfile"
      --destination "${CI_REGISTRY_IMAGE}/photo:${CI_COMMIT_SHORT_SHA}"
      --build-arg HTTP_PROXY=${HTTP_PROXY}
      --build-arg HTTPS_PROXY=${HTTPS_PROXY}

deploy_photo:
  stage: deploy
  image:
    name: bitnami/kubectl
    entrypoint: [""]
  script:
    - cd app/photo-service
    - sed -i "s/:latest/:${CI_COMMIT_SHORT_SHA}/g" k8s-photo.yml
    - kubectl apply -f k8s-photo.yml
  environment:
    name: production


test_album:
  stage: test
  variables:
    MONGO_HOST: mongo-test
  image: $CI_REGISTRY/$CI_PROJECT_PATH/photoapptest_1.0
  script:
    - cd app/albums_service
    - pytest -p no:warnings 
  services:
    - name: gitlab-registry.imt-atlantique.fr/devops-lab/shared/mongo:latest
      alias: mongo-service-test

build_album:
  stage: release
  image:
    name: gcr.io/kaniko-project/executor:debug
    entrypoint: [""]
  # These variables are needed to make executor image able to download images
  variables:
    HTTP_PROXY: http://192.108.115.2:8080
    HTTPS_PROXY: http://192.108.115.2:8080
    NO_PROXY: gitlab-df.imt-atlantique.fr,gitlab-df-registry.imt-atlantique.fr
    DEBIAN_FRONTEND: noninteractive
  before_script:
    - mkdir -p /kaniko/.docker
    - echo "{\"auths\":{\"${CI_REGISTRY}\":{\"auth\":\"$(printf "%s:%s" "${CI_REGISTRY_USER}" "${CI_REGISTRY_PASSWORD}" | base64 | tr -d '\n')\"}}}" > /kaniko/.docker/config.json
  script:
    - export HTTP_PROXY=${HTTP_PROXY}
    - export HTTPS_PROXY=${HTTPS_PROXY}
    - export NO_PROXY=${NO_PROXY}
    - export DEBIAN_FRONTEND=${DEBIAN_FRONTEND}
    - >-
      /kaniko/executor
      --context "${CI_PROJECT_DIR}/app/albums_service"
      --dockerfile "${CI_PROJECT_DIR}/app/albums_service/Dockerfile"
      --destination "${CI_REGISTRY_IMAGE}/album_1:${CI_COMMIT_SHORT_SHA}"
      --build-arg HTTP_PROXY=${HTTP_PROXY}
      --build-arg HTTPS_PROXY=${HTTPS_PROXY}

      # Again, HTTP(S)_PROXY needed for the docker build with kaniko    


deploy_album:
  stage: deploy
  image:
    name: bitnami/kubectl
    entrypoint: [""]
  script:
    - cd app/albums_service
    - sed -i "s/:latest/:${CI_COMMIT_SHORT_SHA}/g" k8s-album.yml
    - kubectl apply -f k8s-album.yml
  environment:
    name: production
